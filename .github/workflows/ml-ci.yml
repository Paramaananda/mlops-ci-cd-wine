name: CI-CD workflows

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  MODEL_ARTIFACT_NAME: trained-model

jobs:
  test-and-train:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest dvc[ssh] mlflow

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DVC_SSH_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.DVC_SSH_HOST }} >> ~/.ssh/known_hosts

      - name: DVC Pull
        run: dvc pull -v

      - name: Run Unit Tests
        run: pytest tests/ --maxfail=1 --disable-warnings -q

      - name: Train and Evaluate Model
        run: python main.py

      - name: DVC Push 
        run: dvc push -v

      - name: Upload model artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.MODEL_ARTIFACT_NAME }}
          path: |
            ./best_model.joblib
            ./scaler.joblib
            ./metrics.json

      - name: Upload MLflow runs
        uses: actions/upload-artifact@v4
        with:
          name: mlruns
          path: ./mlruns

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: test-and-train
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download trained model & scaler
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.MODEL_ARTIFACT_NAME }}
          path: ./

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/mlops-app:latest .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/mlops-app:latest